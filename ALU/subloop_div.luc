module subloop_div (
    input clk,              // 100MHz clock
    input rst,  
    input a[16],
    input b[16],
    output q[16], //quotient
    output r[16], //remainder
    output ex //divi_by_0
    
  ) {

  dff rb[16](#INIT(0), .clk(clk), .rst(rst));//divisor 
  dff ra[16](#INIT(0), .clk(clk), .rst(rst)); //divident
  dff rc[16](#INIT(0), .clk(clk), .rst(rst)); //quotient counter
  dff re[16](#INIT(0), .clk(clk), .rst(rst)); //remainder counter

  always {
      rb.d = b;
      ex = rb.q;    
      q = rc.q;
      r = re.q;
    //init ra value
    if (ra.q == 0 & rc.q == 0){
        ra.d = a;
      }
    
    case (b[15]){
      0:
        case(a[15]){
            0://P/P
             if (ra.q<rb.q){
                r = ra.q; //remainder 
                q =rc.q; //quotient
                }
             else{
                ra.d=ra.q-rb.q;
                rc.d = rc.q +1;
                }
            1://N/P
            if (ra.q>rb.q){
                r = ra.q; //remainder 
                q =rc.q; //quotient
                }
             else{
                ra.d=ra.q+rb.q;
                rc.d = rc.q +1;
                }
            
        }
      1:
        case(a[15]){
            0://P/N
             if (ra.q<~rb.q){
                r = ra.q; //remainder 
                q =rc.q; //quotient
                }
             else{
                ra.d=ra.q+rb.q;
                rc.d = rc.q +1;
                }
            1://N/N
            if (ra.q>rb.q){
                r = ra.q; //remainder 
                q =rc.q; //quotient
                }
             else{
                ra.d=ra.q-rb.q;
                rc.d = rc.q +1;
                }
            
        }
      
        
    }

  }

