module adder (
// Note: a & b are 8-bit inputs. ALUFN is a 6-bit input
// z, v, n are all 1-bit outputs.
    input a[16], // 16 bit input
    input b[16], // 16 bit input
    input alufn_signal[6], // 6 bit ALUFN
    output out[16], // 16 bit output
    output z[1],
    output v[1],
    output n[1]
  ) {
  // The signal out is write only and cannot be read.
  // Hence, a signal s is used as a temp variable for the output.
  sig s[16]; 
  
  always {
    s = b0000000000000000; 

    
    case(alufn_signal[0]){
      0: s = a+b;
      1: s = a-b;
      default: s = b0000000000000000;
  }
    n = s[15];
    v = (a[15] & (b[15] ^ alufn_signal[0]) & !s[15]) | (!a[15] & !(b[15] ^ alufn_signal[0]) & s[15]); 
    z = ~|s;
    out = s;
  }
}
